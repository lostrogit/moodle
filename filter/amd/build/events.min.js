define("core_filters/events",["exports","core/event_dispatcher","core/normalise","jquery"],(function(_exports,_event_dispatcher,_normalise,_jquery){var obj;
/**
   * Javascript events for the `core_filters` subsystem.
   *
   * @module     core_filters/events
   * @copyright  2021 Andrew Nicols <andrew@nicols.co.uk>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   * @since      4.0
   *
   * @example <caption>Example of listening to a filter event.</caption>
   * import {eventTypes as filterEventTypes} from 'core_filters/events';
   *
   * document.addEventListener(filterEventTypes.filterContentUpdated, e => {
   *     window.console.log(e.detail.nodes); // A list of the HTMLElements whose content was updated
   * });
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.notifyFilterContentUpdated=_exports.eventTypes=void 0,_jquery=(obj=_jquery)&&obj.__esModule?obj:{default:obj};const eventTypes={filterContentUpdated:"core_filters/contentUpdated"};_exports.eventTypes=eventTypes;_exports.notifyFilterContentUpdated=nodes=>(nodes=(0,_normalise.getList)(nodes),(0,_event_dispatcher.dispatchEvent)(eventTypes.filterContentUpdated,{nodes:nodes}));let legacyEventsRegistered=!1;legacyEventsRegistered||(Y.use("event","moodle-core-event",(()=>{document.addEventListener(eventTypes.filterContentUpdated,(e=>{(0,_jquery.default)(document).trigger(M.core.event.FILTER_CONTENT_UPDATED,[(0,_jquery.default)(e.detail.nodes)]),Y.fire(M.core.event.FILTER_CONTENT_UPDATED,{nodes:new Y.NodeList(e.detail.nodes)})}))})),legacyEventsRegistered=!0);const fixScroll=()=>{var _navigator,_navigator$userAgentD,_navigator2,_navigator3;const platform=(null===(_navigator=navigator)||void 0===_navigator||null===(_navigator$userAgentD=_navigator.userAgentData)||void 0===_navigator$userAgentD?void 0:_navigator$userAgentD.platform)||(null===(_navigator2=navigator)||void 0===_navigator2?void 0:_navigator2.platform)||"undefined",userAgent=(null===(_navigator3=navigator)||void 0===_navigator3?void 0:_navigator3.userAgent)||"unknown";if(-1!==platform.indexOf("Linux")&&userAgent.match(/firefox|fxios/i)){const selectors=['[style*="scrollbar-width:thin"],[style*="scrollbar-width: thin"]'],cssToSearch=/\bscrollbar-width:\s*thin;/;Array.from(document.styleSheets).forEach((styleSheet=>{Array.from(styleSheet.cssRules).forEach((rule=>{cssToSearch.test(rule.cssText)&&(rule.cssRules&&void 0===rule.selectorText?Array.from(rule.cssRules).forEach((innerRule=>{cssToSearch.test(innerRule.cssText)&&selectors.push(innerRule.selectorText)})):selectors.push(rule.selectorText))}))})),document.querySelectorAll(selectors.join(",")).forEach((element=>{element.style.setProperty("scrollbar-width","auto")}))}};fixScroll(),document.addEventListener(eventTypes.filterContentUpdated,(()=>{fixScroll()}))}));

//# sourceMappingURL=events.min.js.map