{"version":3,"file":"autocomplete_loader.min.js","sources":["../src/autocomplete_loader.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Autocomplete library config\n *\n * @module      core/autocomplete_loader\n * @copyright   2023 Moodle Pty Ltd <support@moodle.com>\n * @author      2023 Carlos Castillo <carlos.castillo@moodle.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n\"use strict\";\n\nimport {autocomplete} from 'core/autocomplete';\nimport {getString} from \"./str\";\n\n/**\n * Retrieve all search results.\n *\n * @method\n * @param {string} query Selector id for search input\n * @param {string} method used to retrieve the search result\n * @returns {Promise}\n */\nconst fetchSearch = async(query, method = 'core_search_autocomplete') => {\n    const Ajax = await import('core/ajax');\n\n    const request = await Ajax.call([{\n        methodname: method,\n        args: {\n            query: query\n        }\n    }])[0];\n    return request.results;\n};\n\n/**\n * Initialise module, ensuring we load our resources and event listeners only once\n *\n * @param {string} selector Selector id for search input\n * @param {string} placeholder The placeholder to show into search input\n * @param {integer} paginationConfig pagination config setting\n * @param {bool} showinmodal pagination config setting\n */\nexport const init = async(selector, placeholder, paginationConfig, showinmodal) => {\n\n    // Define strings\n    const allResultString = await getString('autocompletesearchresult', 'search');\n    const clickHereString = await getString('clickhere', 'moodle');\n    const noResultsString = await getString('noresultsfound', 'search');\n\n    // Define pagination variables\n    let currentPage = 0;\n    const itemsPerPage = paginationConfig; // Adjust as needed\n    let allResults = []; // Store all results\n\n    autocomplete({\n        container: '#' + selector,\n        placeholder: placeholder,\n        detachedMediaQuery: showinmodal ? '' : 'null',\n        getSources({query}) {\n            if (query.length <= 3) {\n                return [];\n            }\n            return fetchSearch(query).then((response) => {\n                allResults = response;\n\n                const source = {\n                    sourceId: 'settings',\n                    getItems() {\n                        const startIndex = currentPage * itemsPerPage;\n                        const endIndex = startIndex + itemsPerPage;\n                        return allResults.slice(startIndex, endIndex);\n                    },\n                    getItemInputValue({item}) {\n                        return item.description;\n                    },\n                    getItemUrl({item}) {\n                        return item.url;\n                    },\n                    onSelect: function({item}) {\n                        window.location.href = item.url;\n                    },\n                    templates: {\n                        item({item, html}) {\n                            return html`\n                                <div class=\"aa-ItemWrapper\">\n                                    <div class=\"aa-ItemContent\">\n                                        <div class=\"aa-ItemIcon aa-ItemIcon--noBorder\">\n                                            <svg\n                                                width=\"18\"\n                                                height=\"18\"\n                                                viewBox=\"0 0 24 24\"\n                                                fill=\"none\"\n                                                stroke=\"currentColor\"\n                                                stroke-width=\"2\"\n                                                stroke-linecap=\"round\"\n                                                stroke-linejoin=\"round\"\n                                            >\n                                                <path\n                                                        d=\"M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6\"\n                                                />\n                                                <polyline points=\"15 3 21 3 21 9\"/>\n                                                <line x1=\"10\" y1=\"14\" x2=\"21\" y2=\"3\"/>\n                                            </svg>\n                                        </div>\n                                        <div class=\"aa-ItemContentBody\">\n                                            <div class=\"aa-ItemContentTitle\">\n                                                ${item.settingvisiblename}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"aa-ItemWrapper\">\n                                    <div class=\"aa-ItemContent aa-ItemContent--indented\">\n                                        <div class=\"aa-ItemContentSubtitle aa-ItemContentSubtitle--standalone\">\n                                            <span class=\"aa-ItemContentSubtitleIcon\"></span>\n                                            <span>in <span class=\"aa-ItemContentSubtitleCategory\">\n                                                    ${item.path}\n                                                </span>\n                                                </span>\n                                        </div>\n                                    </div>\n                                </div>\n                            `;\n                        },\n                        footer({items, html}) {\n                            const totalItems = allResults.length;\n                            const totalPages = Math.ceil(totalItems / itemsPerPage);\n\n                            const numberOfPages = Array.from({length: totalPages}, (_, i) => i + 1);\n                            return html`\n                                <div class=\"footer-container\">\n                                    <nav aria-label=\"Autocomplete pagination\">\n                                        <ul class=\"pagination justify-content-center\">\n                                            ${numberOfPages.map(\n                                                (page) =>\n                                                    html`\n                                                        <li class=\"page-item ${currentPage + 1 === page ? `active` : ``}\">\n                                                            <a class=\"page-link pagination-button\"\n                                                               data-page=\"${page}\" href=\"#\">${page}</a>\n                                                        </li>`\n                                            )}\n                                        </ul>\n                                    </nav>\n                                    <div class=\"text-center\">\n                                        ${allResultString}<a href=\"${items[0].rooturl}\">  ${clickHereString}</a>\n                                    </div>\n                                </div>`;\n                        },\n                    },\n                };\n                return [source];\n            });\n        },\n        renderNoResults({state, render}, root) {\n            render(`\"${noResultsString} ${state.query}\".`, root);\n        },\n    });\n\n    // Event listener for the \"page\" button\n    document.addEventListener('click', (event) => {\n        if (event.target.classList.contains('pagination-button')) {\n            currentPage = parseInt(event.target.getAttribute('data-page'), 10) - 1;\n            document.querySelector('.aa-Input').dispatchEvent(new Event('input'));\n        }\n    });\n};\n"],"names":["async","selector","placeholder","paginationConfig","showinmodal","allResultString","clickHereString","noResultsString","currentPage","itemsPerPage","allResults","container","detachedMediaQuery","getSources","query","length","method","Ajax","call","methodname","args","results","fetchSearch","then","response","sourceId","getItems","startIndex","endIndex","slice","getItemInputValue","item","description","getItemUrl","url","onSelect","window","location","href","templates","html","settingvisiblename","path","footer","items","totalItems","totalPages","Math","ceil","numberOfPages","Array","from","_","i","map","page","rooturl","renderNoResults","root","state","render","document","addEventListener","event","target","classList","contains","parseInt","getAttribute","querySelector","dispatchEvent","Event"],"mappings":"qjBAyDoBA,MAAMC,SAAUC,YAAaC,iBAAkBC,qBAGzDC,sBAAwB,kBAAU,2BAA4B,UAC9DC,sBAAwB,kBAAU,YAAa,UAC/CC,sBAAwB,kBAAU,iBAAkB,cAGtDC,YAAc,QACZC,aAAeN,qBACjBO,WAAa,kCAEJ,CACTC,UAAW,IAAMV,SACjBC,YAAaA,YACbU,mBAAoBR,YAAc,GAAK,OACvCS,qBAAWC,MAACA,mBACJA,MAAMC,QAAU,EACT,GAtCHf,eAAMc,WAAOE,8DAAS,iCAChCC,qmBAEgBA,KAAKC,KAAK,CAAC,CAC7BC,WAAYH,OACZI,KAAM,CACFN,MAAOA,UAEX,IACWO,QA+BAC,CAAYR,OAAOS,MAAMC,WAC5Bd,WAAac,eAuFN,CArFQ,CACXC,SAAU,WACVC,iBACUC,WAAanB,YAAcC,aAC3BmB,SAAWD,WAAalB,oBACvBC,WAAWmB,MAAMF,WAAYC,WAExCE,6BAAkBC,KAACA,mBACRA,KAAKC,aAEhBC,sBAAWF,KAACA,mBACDA,KAAKG,KAEhBC,SAAU,oBAASJ,KAACA,YAChBK,OAAOC,SAASC,KAAOP,KAAKG,KAEhCK,UAAW,CACPR,gBAAKA,KAACA,KAADS,KAAOA,mBACDA,qiFAuBeT,KAAKU,mBAUDV,KAAKW,OAQnCC,kBAAOC,MAACA,MAADJ,KAAQA,kBACLK,WAAanC,WAAWK,OACxB+B,WAAaC,KAAKC,KAAKH,WAAapC,cAEpCwC,cAAgBC,MAAMC,KAAK,CAACpC,OAAQ+B,aAAa,CAACM,EAAGC,IAAMA,EAAI,WAC9Db,kpBAIWS,cAAcK,KACXC,MACGf,+ZAC2BhC,YAAc,IAAM+C,iBAEvBA,KAAkBA,QAMpDlD,gBAA2BuC,MAAM,GAAGY,QAAclD,yBASpFmD,sBAAiCC,UAAjBC,MAACA,MAADC,OAAQA,cACpBA,kBAAWrD,4BAAmBoD,MAAM7C,YAAW4C,SAKvDG,SAASC,iBAAiB,SAAUC,QAC5BA,MAAMC,OAAOC,UAAUC,SAAS,uBAChC1D,YAAc2D,SAASJ,MAAMC,OAAOI,aAAa,aAAc,IAAM,EACrEP,SAASQ,cAAc,aAAaC,cAAc,IAAIC,MAAM"}